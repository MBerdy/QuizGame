{"version":3,"sources":["components/Prizes/Prize/Prize.module.css","pages/FinishPage/FinishPage.module.css","components/QuestionBlock/Answers/Answer/Answer.module.css","pages/StartPage/StartPage.module.css","components/SideDrawer/SideDrawer.module.css","components/SideDrawer/DrawerToggle/DrawerToggle.module.css","assets/img/hand.png","components/UI/HandLogo/HandLogo.module.css","components/UI/Button/Button.module.css","components/QuestionBlock/Question/Question.module.css","components/QuestionBlock/Answers/Answers.module.css","components/Prizes/Prizes.module.css","pages/QuestionsPage/QuestionsPage.module.css","components/UI/HandLogo/HandLogo.js","components/UI/Button/Button.js","pages/StartPage/StartPage.js","pages/FinishPage/FinishPage.js","components/QuestionBlock/Question/Question.js","components/QuestionBlock/Answers/Answer/Answer.js","components/QuestionBlock/Answers/Anwsers.js","components/QuestionBlock/QuestionBlock.js","components/SideDrawer/DrawerToggle/DrawerToggle.js","components/SideDrawer/SideDrawer.js","components/Prizes/Prize/Prize.js","components/Prizes/Prizes.js","pages/QuestionsPage/QuestionsPage.js","HOC/Auxiliary.js","containers/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HandLogo","src","Hand","alt","className","classes","Button","props","onClick","clicked","children","StartPage","Container","Main","Header","this","startGame","React","Component","FinishPage","Text","totalPrize","Question","question","Answer","attachedClasses","correct","Correct","Wrong","join","options","answer","Answers","currentAnswers","map","id","key","text","isCorrect","selected","QuestionBlock","currentNumQuestion","name","answers","DrawerToggle","nextProps","open","Open","prizeToggleClicked","SideDrawer","Close","Prize","reachedPrizeNum","parseInt","reachedPrize","split","currentPrizeNum","value","Current","Passed","NotReached","Prizes","prize","currentPrize","QuestionsPage","QuestionPage","openPrize","selectedAnswer","Aux","Layout","startGameHandler","setState","started","startGameAgainHandler","finished","prizeToggleHandler","prevState","showPrize","selectedAnswerHandler","state","data","setTimeout","currentPage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,0BAA0B,QAAU,uBAAuB,OAAS,wB,gBCAhID,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,KAAO,yBAAyB,OAAS,2BAA2B,UAAY,gC,gBCA9KD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,MAAQ,wB,gBCA5FD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,OAAS,0BAA0B,UAAY,+B,gBCAzID,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,4B,gBCAtGD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,KAAO,6B,kiGCD3ED,EAAOC,QAAU,IAA0B,kC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,yB,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,aAAe,sC,gOCQlBC,EAJC,kBACZ,yBAAKC,IAAKC,IAAMC,IAAI,OAAMC,UAAWC,IAAQH,Q,iBCGlCI,EANA,SAACC,GACZ,OACI,4BAAQC,QAASD,EAAME,QAASL,UAAWC,IAAQC,QAASC,EAAMG,W,gBCiB3DC,E,uKAfP,OACI,yBAAKP,UAAWC,IAAQM,WACpB,yBAAKP,UAAWC,IAAQO,WACpB,kBAAC,EAAD,MACA,yBAAKR,UAAWC,IAAQQ,MACpB,wBAAIT,UAAWC,IAAQS,QAAvB,kCACA,kBAAC,EAAD,CAAQL,QAASM,KAAKR,MAAMS,WAA5B,gB,GARAC,IAAMC,W,gBCmBfC,E,uKAhBP,OACI,yBAAKf,UAAWC,IAAQc,YACpB,yBAAKf,UAAWC,IAAQO,WACpB,kBAAC,EAAD,MACA,yBAAKR,UAAWC,IAAQQ,MACpB,uBAAGT,UAAWC,IAAQe,MAAtB,gBACA,wBAAIhB,UAAWC,IAAQS,QAAvB,KAAkCC,KAAKR,MAAMc,WAA7C,WACA,kBAAC,EAAD,CAAQZ,QAASM,KAAKR,MAAMS,WAA5B,oB,GATCC,IAAMC,W,iBCIhBI,EANE,SAACf,GACd,OACI,wBAAIH,UAAYC,IAAQiB,UAAWf,EAAMgB,W,gBCclCC,EAhBA,SAACjB,GACZ,IAAIkB,EAAiB,CAACpB,IAAQmB,QAM9B,OAJIC,EADDlB,EAAMmB,QACY,CAACrB,IAAQmB,OAAQnB,IAAQsB,SAEzB,CAACtB,IAAQmB,OAAQnB,IAAQuB,OAG9C,yBACIpB,QAASD,EAAME,QACfL,UAAWqB,EAAgBI,KAAK,MAC5B,8BAAOtB,EAAMuB,SAAgBvB,EAAMwB,S,iBCOhCC,EAjBC,SAACzB,GACb,IAAMuB,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1C,OACG,yBAAK1B,UAAYC,IAAQ2B,SACrBzB,EAAM0B,eAAeC,KAAK,SAACH,EAAQI,GAChC,OAAO,kBAAC,EAAD,CACGL,QAAUA,EAAQK,GAClBC,IAAKN,EAAQK,GACbJ,OAASA,EAAOM,KAChBX,QAAUK,EAAOO,UACjB7B,QAAU,WAAKF,EAAMgC,SAASR,EAAOO,mBCC9CE,EAXM,SAACjC,GAClB,OACI,yBAAKH,WAAS,GACV,kBAAC,EAAD,CAAUmB,SAAWhB,EAAMkC,mBAAmBC,OAC9C,kBAAC,EAAD,CACIT,eAAkB1B,EAAMkC,mBAAmBE,QAC3CJ,SAAWhC,EAAMgC,a,iBCelBK,E,oLArBWC,GAClB,OAAOA,EAAUC,OAAS/B,KAAKR,MAAMuC,O,+BAGrC,IAAIrB,EAAkB,CAACpB,IAAQuC,cAI/B,OAHI7B,KAAKR,MAAMuC,OACXrB,EAAkB,CAACpB,IAAQuC,aAAcvC,IAAQ0C,OAGjD,yBAAKvC,QAASO,KAAKR,MAAMyC,mBAAoB5C,UAAWqB,EAAgBI,KAAK,MACzE,8BACA,8BACA,mC,GAbWZ,IAAMC,W,gBCmBlB+B,E,uKAhBP,IAAIxB,EAAkB,CAACpB,IAAQ4C,WAAY5C,IAAQ6C,OAInD,OAHInC,KAAKR,MAAMuC,OACXrB,EAAkB,CAACpB,IAAQ4C,WAAY5C,IAAQ0C,OAG/C,yBAAK3C,UAAWqB,EAAgBI,KAAK,MACjC,kBAAC,EAAD,CACImB,mBAAoBjC,KAAKR,MAAMyC,mBAC/BF,KAAM/B,KAAKR,MAAMuC,OACpB/B,KAAKR,MAAMG,c,GAXHO,IAAMC,W,gBCgBhBiC,EAjBF,SAAC5C,GACV,IAEIkB,EAFA2B,EAAkBC,SAAS9C,EAAM+C,aAAaC,MAAM,KAAK1B,KAAK,KAC9D2B,EAAkBH,SAAS9C,EAAMkD,MAAMF,MAAM,KAAK1B,KAAK,KAS3D,OANIJ,EADAlB,EAAM+C,eAAiB/C,EAAMkD,MACZ,CAACpD,IAAQ8C,MAAO9C,IAAQqD,SAClCF,EAAkBJ,EACR,CAAC/C,IAAQ8C,MAAO9C,IAAQsD,QAEzB,CAACtD,IAAQ8C,MAAO9C,IAAQuD,YAGxC,yBAAKxD,UAAWqB,EAAgBI,KAAK,MAArC,IAA8CtB,EAAMkD,Q,iBCe7CI,EA1BD,SAACtD,GAcX,OACI,yBAAKH,UAAWC,IAAQwD,QAdd,CACV,YACA,UACA,UACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OAGY3B,KAAI,SAAC4B,GACT,OAAO,kBAAC,EAAD,CACK1B,IAAK0B,EACLL,MAAOK,EACPR,aAAe/C,EAAMwD,oB,iBCGlCC,E,uKAlBP,OACI,yBAAK5D,UAAWC,IAAQ4D,cACpB,kBAAC,EAAD,CACInB,KAAM/B,KAAKR,MAAM2D,UACjBlB,mBAAoBjC,KAAKR,MAAMyC,qBACnC,kBAAC,EAAD,CACIP,mBAAoB1B,KAAKR,MAAMkC,mBAC/BF,SAAUxB,KAAKR,MAAM4D,iBACzB,kBAAC,EAAD,CACIrB,KAAM/B,KAAKR,MAAM2D,UACjBlB,mBAAoBjC,KAAKR,MAAMyC,oBAC/B,kBAAC,EAAD,CAAQe,aAAchD,KAAKR,MAAMkC,mBAAmBqB,c,GAb5C7C,IAAMC,WCNnBkD,EAFJ,SAAC7D,GAAD,OAAWA,EAAMG,UCiFb2D,E,kDAzEX,WAAY9D,GAAQ,IAAD,8BACf,cAAMA,IAWV+D,iBAAmB,WACf,EAAKC,SAAS,CAAEC,SAAS,KAbV,EAgBnBC,sBAAwB,WACpB,EAAKF,SAAS,CAAEG,UAAU,EAAOjC,mBAAoB,EAAGpB,WAAY,OAjBrD,EAoBnBsD,mBAAqB,WACjB,EAAKJ,UAAS,SAACK,GACX,MAAO,CAAEC,WAAYD,EAAUC,eAtBpB,EA0BnBC,sBAAwB,SAACpD,GACrB,IAAIqC,EAAe,EAAKgB,MAAMC,KAAK,EAAKD,MAAMtC,oBAAoBqB,MAC5DrB,EAAqB,EAAKsC,MAAMtC,mBACtCwC,YAAW,WACHvD,GAAkC,KAAvBe,EACX,EAAK8B,UAAS,SAACK,GACX,MAAO,CACHnC,mBAAoBmC,EAAUnC,mBAAqB,EACnDpB,WAAY0C,MAGU,KAAvBtB,EACP,EAAK8B,SAAS,CAAEG,UAAU,EAAMrD,WAAY0C,IAG5C,EAAKQ,SAAS,CAAEG,UAAU,MAE/B,MAzCH,EAAKK,MAAQ,CACTC,KAAMA,EACNvC,mBAAoB,EACpBpB,WAAY,IACZqD,UAAU,EACVF,SAAS,EACTK,WAAW,GARA,E,qDA+Cf,IAEIK,EAFEV,EAAUzD,KAAKgE,MAAMP,QACrBE,EAAW3D,KAAKgE,MAAML,SAiB5B,OAfKF,GAAYE,EAGRF,IAAaE,EAClBQ,EAAc,kBAAC,EAAD,CACVzC,mBAAoB1B,KAAKgE,MAAMC,KAAKjE,KAAKgE,MAAMtC,oBAC/C0B,eAAgBpD,KAAK+D,sBACrBZ,UAAWnD,KAAKgE,MAAMF,UACtB7B,mBAAoBjC,KAAK4D,qBAExBD,IACLQ,EAAc,kBAAC,EAAD,CACVlE,UAAWD,KAAK0D,sBAChBpD,WAAYN,KAAKgE,MAAM1D,cAZ3B6D,EAAc,kBAAC,EAAD,CAAWlE,UAAWD,KAAKuD,mBAezC,kBAAC,EAAD,KACKY,O,GApEIjE,IAAMC,W,MCMZiE,MARf,WACE,OACE,yBAAK/E,UAAU,OACb,kBAAC,EAAD,QCIcgF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.51f70e7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Prize\":\"Prize_Prize__3Fm2Q\",\"NotReached\":\"Prize_NotReached__3fzAj\",\"Current\":\"Prize_Current__1_dR7\",\"Passed\":\"Prize_Passed__el3hf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishPage\":\"FinishPage_FinishPage__EAbbm\",\"Main\":\"FinishPage_Main__1DfBR\",\"Text\":\"FinishPage_Text__1FyYm\",\"Header\":\"FinishPage_Header__2XHJK\",\"Container\":\"FinishPage_Container__cV39v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Answer\":\"Answer_Answer__yR6Xt\",\"Correct\":\"Answer_Correct__3-dkK\",\"Wrong\":\"Answer_Wrong__bJE8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartPage\":\"StartPage_StartPage__3ngId\",\"Main\":\"StartPage_Main__1Uk2b\",\"Header\":\"StartPage_Header__2iLnD\",\"Container\":\"StartPage_Container__3gst_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__P1a0v\",\"Open\":\"SideDrawer_Open__1ppvw\",\"Close\":\"SideDrawer_Close__98Xml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3Qoco\",\"Open\":\"DrawerToggle_Open__3tVWO\"};","module.exports = __webpack_public_path__ + \"static/media/hand.d9b069c7.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hand\":\"HandLogo_Hand__13ui4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3qQRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Question\":\"Question_Question__3_PLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Answers\":\"Answers_Answers__vEng5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Prizes\":\"Prizes_Prizes__1uIHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuestionPage\":\"QuestionsPage_QuestionPage__3tU6K\"};","import React from 'react';\r\n\r\nimport Hand from '../../../assets/img/hand.png';\r\nimport classes from './HandLogo.module.css';\r\n\r\nconst HandLogo =() => (\r\n    <img src={Hand} alt=\"Hand\"className={classes.Hand} />\r\n);\r\n\r\nexport default HandLogo;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\nconst Button = (props) => {\r\n    return (\r\n        <button onClick={props.clicked} className={classes.Button}>{props.children}</button>\r\n    );    \r\n};\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport HandLogo from '../../components/UI/HandLogo/HandLogo';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './StartPage.module.css';\r\nclass StartPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.StartPage}>\r\n                <div className={classes.Container}>\r\n                    <HandLogo />\r\n                    <div className={classes.Main} >\r\n                        <h1 className={classes.Header}>Who wants to be a millionaire?</h1>\r\n                        <Button clicked={this.props.startGame}>Start</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default StartPage;","import React from 'react';\r\n\r\nimport HandLogo from '../../components/UI/HandLogo/HandLogo';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './FinishPage.module.css';\r\n\r\nclass FinishPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.FinishPage}>\r\n                <div className={classes.Container}>\r\n                    <HandLogo />\r\n                    <div className={classes.Main}>\r\n                        <p className={classes.Text}>Total score:</p>\r\n                        <h1 className={classes.Header}>$ {this.props.totalPrize} earned</h1>\r\n                        <Button clicked={this.props.startGame}>Try again</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FinishPage;","import React from 'react';\r\n\r\nimport classes from './Question.module.css';\r\n\r\nconst Question = (props) => {\r\n    return(\r\n        <h2 className ={classes.Question}>{props.question}</h2>\r\n    );    \r\n}\r\n\r\nexport default Question;","import React from 'react';\r\n\r\nimport classes from'./Answer.module.css';\r\n\r\nconst Answer = (props) => {\r\n    let attachedClasses =[classes.Answer];\r\n    if(props.correct) {\r\n        attachedClasses =[classes.Answer, classes.Correct];\r\n    } else {\r\n        attachedClasses =[classes.Answer, classes.Wrong]\r\n    }\r\n    return(\r\n    <div \r\n        onClick={props.clicked} \r\n        className={attachedClasses.join(' ')}>\r\n            <span>{props.options}</span>{props.answer}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Answer;\r\n","import React from 'react';\r\n\r\nimport Answer from './Answer/Answer';\r\nimport classes from './Answers.module.css';\r\n\r\nconst Answers = (props) => {\r\n    const options = ['A', 'B', 'C', 'D', 'E', 'F'];\r\n    return(        \r\n       <div className ={classes.Answers}>\r\n          {props.currentAnswers.map ((answer, id) => {\r\n              return <Answer\r\n                        options ={options[id]} \r\n                        key={options[id]} \r\n                        answer ={answer.text}\r\n                        correct ={answer.isCorrect}\r\n                        clicked ={()=>{props.selected(answer.isCorrect)}} />\r\n          })}\r\n       </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Answers;","import React from 'react';\r\n\r\nimport Question from './Question/Question';\r\nimport Answers from './Answers/Anwsers'\r\n\r\nconst QuestionBlock =(props) => {\r\n    return (\r\n        <div className>\r\n            <Question question ={props.currentNumQuestion.name}/>\r\n            <Answers \r\n                currentAnswers = {props.currentNumQuestion.answers}\r\n                selected ={props.selected} /> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionBlock;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nclass DrawerToggle extends React.Component {\r\n    shouldComponentUpdate(nextProps, ) {\r\n        return nextProps.open !== this.props.open  \r\n    }\r\n    render() {\r\n        let attachedClasses = [classes.DrawerToggle];\r\n        if (this.props.open) {\r\n            attachedClasses = [classes.DrawerToggle, classes.Open];\r\n        }\r\n        return (\r\n            <div onClick={this.props.prizeToggleClicked} className={attachedClasses.join(' ')}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default DrawerToggle","import React from 'react';\r\n\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nimport classes from './SideDrawer.module.css';\r\n\r\nclass SideDrawer extends React.Component {\r\n    render() {\r\n        let attachedClasses = [classes.SideDrawer, classes.Close];\r\n        if (this.props.open) {\r\n            attachedClasses = [classes.SideDrawer, classes.Open]\r\n        }\r\n        return (\r\n            <div className={attachedClasses.join(' ')}>\r\n                <DrawerToggle\r\n                    prizeToggleClicked={this.props.prizeToggleClicked}\r\n                    open={this.props.open} />\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SideDrawer;","import React from 'react';\r\n\r\nimport classes from './Prize.module.css';\r\n\r\nconst Prize =(props) => {\r\n    let reachedPrizeNum = parseInt(props.reachedPrize.split(',').join(''));\r\n    let currentPrizeNum = parseInt(props.value.split(',').join(''));\r\n    let attachedClasses;\r\n    if (props.reachedPrize === props.value) {\r\n        attachedClasses =[classes.Prize, classes.Current]\r\n    } else if (currentPrizeNum < reachedPrizeNum) {\r\n        attachedClasses =[classes.Prize, classes.Passed]\r\n    } else {\r\n        attachedClasses=[classes.Prize, classes.NotReached];\r\n    }\r\n    return (\r\n        <div className={attachedClasses.join(' ')} >${props.value}</div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Prize\r\n        \r\n    ","import React from 'react';\r\n\r\nimport Prize from './Prize/Prize';\r\nimport classes from './Prizes.module.css'\r\n\r\nconst Prizes =(props) => {\r\n    const prizes =[\r\n        \"1,000,000\", \r\n        \"500,000\", \r\n        \"250,000\", \r\n        \"125,000\", \r\n        \"64,000\", \r\n        \"32,000\", \r\n        '16,000',\r\n        \"8,000\",\r\n        \"4,000\",\r\n        \"2,000\",\r\n        \"1,000\",\r\n        \"500\"];    \r\n    return (\r\n        <div className={classes.Prizes}>\r\n            {prizes.map((prize) => {\r\n                return <Prize \r\n                            key={prize} \r\n                            value={prize}                            \r\n                            reachedPrize ={props.currentPrize} />\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Prizes;","import React from 'react';\r\n\r\nimport QuestionBlock from '../../components/QuestionBlock/QuestionBlock';\r\nimport SideDrawer from '../../components/SideDrawer/SideDrawer';\r\nimport DrawerToggle from '../../components/SideDrawer/DrawerToggle/DrawerToggle';\r\nimport Prizes from '../../components/Prizes/Prizes';\r\nimport classes from './QuestionsPage.module.css'\r\n\r\nclass QuestionsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.QuestionPage}>\r\n                <DrawerToggle\r\n                    open={this.props.openPrize}\r\n                    prizeToggleClicked={this.props.prizeToggleClicked} />\r\n                <QuestionBlock\r\n                    currentNumQuestion={this.props.currentNumQuestion}\r\n                    selected={this.props.selectedAnswer} />\r\n                <SideDrawer\r\n                    open={this.props.openPrize}\r\n                    prizeToggleClicked={this.props.prizeToggleClicked}>\r\n                    <Prizes currentPrize={this.props.currentNumQuestion.prize} />\r\n                </SideDrawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionsPage;","const Aux =(props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\n\r\nimport data from '../../data/data.json';\r\nimport StartPage from '../../pages/StartPage/StartPage';\r\nimport FinishPage from '../../pages/FinishPage/FinishPage';\r\nimport QuestionsPage from '../../pages/QuestionsPage/QuestionsPage';\r\nimport Aux from '../../HOC/Auxiliary';\r\nclass Layout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: data,\r\n            currentNumQuestion: 0,\r\n            totalPrize: \"0\",\r\n            finished: false,\r\n            started: false,\r\n            showPrize: false\r\n        }\r\n    }\r\n\r\n    startGameHandler = () => {\r\n        this.setState({ started: true })\r\n    }\r\n\r\n    startGameAgainHandler = () => {\r\n        this.setState({ finished: false, currentNumQuestion: 0, totalPrize: \"0\" })\r\n    }\r\n\r\n    prizeToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { showPrize: !prevState.showPrize }\r\n        })\r\n    }\r\n    \r\n    selectedAnswerHandler = (correct) => {\r\n        let currentPrize = this.state.data[this.state.currentNumQuestion].prize;\r\n        const currentNumQuestion = this.state.currentNumQuestion;\r\n        setTimeout(() => {\r\n            if (correct && currentNumQuestion !== 11) {\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        currentNumQuestion: prevState.currentNumQuestion + 1,\r\n                        totalPrize: currentPrize\r\n                    }\r\n                })\r\n            } else if (currentNumQuestion === 11) {\r\n                this.setState({ finished: true, totalPrize: currentPrize })\r\n            }\r\n            else {\r\n                this.setState({ finished: true })\r\n            }\r\n        }, 200);\r\n    }\r\n\r\n    render() {\r\n        const started = this.state.started;\r\n        const finished = this.state.finished;\r\n        let currentPage;\r\n        if (!started && !finished) {\r\n            currentPage = <StartPage startGame={this.startGameHandler} />\r\n        }\r\n        else if (started && (!finished)) {\r\n            currentPage = <QuestionsPage\r\n                currentNumQuestion={this.state.data[this.state.currentNumQuestion]}\r\n                selectedAnswer={this.selectedAnswerHandler}\r\n                openPrize={this.state.showPrize}\r\n                prizeToggleClicked={this.prizeToggleHandler} />\r\n        }\r\n        else if (finished) {\r\n            currentPage = <FinishPage\r\n                startGame={this.startGameAgainHandler}\r\n                totalPrize={this.state.totalPrize} />\r\n        }\r\n        return (\r\n            <Aux>\r\n                {currentPage}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\n\nimport Layout from './containers/Layout/Layout';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}